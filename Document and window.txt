Document Object: 

The document object represent a web page that is loaded in the browser. 
By accessing the document object, we can access the element in the HTML page.
With the help of document objects, we can add dynamic content to our web page. 
The document object can be accessed with a "window.document" or just "document".

syntax:
document.property_name;

Some of the properties of Document:

activeElement: It returns the currently active elements in the document.
body: It returns the contents of the body element.
anchors: It returns all <a> elements that have a name attribute.
baseURI: It returns a string value that represents the base URI of the document.
cookie: It returns the cookie of the current document.
charSet: It returns a string, representing the document’s character encoding.
embeds: It returns the collection of all embedded elements.
URL: It returns the complete URL of the document.
forms: It returns all the elements of the form.
fullScreenElement: It returns the element that is currently present in full-screen mode.
title: It returns the title element of the document.
head: It returns the head element of the document.
links: It returns all <area> and <a> elements that have a href attribute.
lastModified: It returns the date and time of the current document that was last modified.

some of the methods of Document:

addEventListener(): It is used to attach an event handler to the specified element.
adoptNode(): It is used to adopt a node from another document and it returns a node object, representing the adopted node.
close(): It is used to close the output stream.
createAttribute(): It is used to create an attribute node with the specified name and returns the attribute object.
createComment(): It is used to create a comment node with some text.
createDocumentFragment(): It is used to create the document fragment to change the content of the document.
createElement(): It is used to create HTML element .
createEvent(): It is used to create a new events object.
createTextNode(): It is used to create a textnode.
execCommand(): It is used to execute a command specified by the user on the editable selected section. It returns a Boolean value.
fullscreenEnabled(): It is used to check whether the document can be viewed in fullscreen mode or not. It returns a boolean value.
getElementById(): It returns the object of the given ID. If no object with that id exists then it returns null.


Window Object: 

The window object is the topmost object of the DOM hierarchy. 
It represents a browser window or frame that displays the contents of the webpage. 
Whenever a window appears on the screen to display the contents of the document, the window object is created. 

Syntax:
window.property_name;


Properties of the window:

Closed: It holds a Boolean value that represents whether the window is closed or not.
console: It returns a reference to the console object which provides access to the browser’s debugging console.
defaultStatus: It is used to define the default message that will be displayed in the status bar when no activity is carried on by the browser.
controllers: It returns the XUL controller objects for the current Chrome window.
customElements: It returns a reference to the CustomElementRegistry object, which can be used to register new custom elements and also get information about already registered custom elements.
crypto: It returns the browser crypto object.
devicePixelRatio: It returns the ratio between physical pixels and device-independent pixels in the current display.
Document: It returns a reference to the document object of that window.
DOMMatrix: It returns a reference to a DOMMatrix object, which represents 4×4 matrices, suitable for 2D and 3D operations.
Status: It overrides the default status and places a message in the status bar.
Top: It returns a reference to the topmost window containing a frame if many windows are opened.
Toolbar: It will result in the toolbar object, whose visibility can be toggled in the window.
Opener: It contains a reference to the window that opened the current window.
Parent: It refers to the frameset in which the current frame is contained.
Screen: It refers to the screen object
Self: It provides another way to refer to the current window.


The methods of Window objects:

alert(): It is used to display an alert box. It displays a specified message along with an OK button and is generally used to make sure that the information comes through the user.
atob(): It is used for decoding a base-64 encoded string. It is used to decode a string of data that has been encoded using the btoa() method.
blur(): It is used to remove focus from the current window.
btoa(): It is used for encoding a string in base-64 format.
clearInterval(): It clears the interval which has been set by the setInterval() function before that.
clearTimeout(): It clears the timeout which has been set by the setTimeout()function before that.
close(): It is used for closing a certain window or tab of the browser which was previously opened.
confirm(): It is used to display a modal dialog with an optional message and two buttons i.e. OK and Cancel. It returns true if the user clicks “OK”, and false otherwise.
focus(): It is used to give focus to an element in the current window.
getComputedStyle(): It is used to get all the computed CSS properties and values of the specified element.


